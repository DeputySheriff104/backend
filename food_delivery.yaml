swagger: "2.0"
info:
  description: "Food delivery API"
  version: "0.1.0"
  title: "Food delivery"
host: "127.0.0.1:8080"
basePath: "/api"
tags:
- name: "food_delivery"
  description: "Operations about food delivery"
- name: "order"
  description: "Operations about order"
schemes:
- "https"
- "http"
paths:
  /dishes:
    post:
      tags:
      - "dish"
      summary: "Create dish"
      description: "This can only be done by the logged in user."
      operationId: "createDish"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Dish object that should be created"
        required: true
        schema:
          $ref: "#/definitions/NewDish"
      responses:
        201:
          description: "Dish successfully create"
          schema: 
            $ref: "#/definitions/CreatedDish"
        400:
          description: "Data is invalid"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ErrorResponse"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /orders:
    post:
      tags:
      - "order"
      summary: "Create order"
      description: "This can only be done by the logged in user."
      operationId: "createOrder"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Order object that should be created"
        required: true
        schema:
          $ref: "#/definitions/NewOrder"
      responses:
        201:
          description: "Order successfully create"
          schema: 
            $ref: "#/definitions/CreatedOrder"
        400:
          description: "Data is invalid"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ErrorResponse"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"  
  /restaurants:
    post:
      tags:
      - "restaurant"
      summary: "Create restaurant"
      description: "This can only be done by the logged in user."
      operationId: "createRestaurant"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Restaurant object that should be created"
        required: true
        schema:
          $ref: "#/definitions/NewRestaurant"
      responses:
        201:
          description: "Restaurant successfully create"
          schema: 
            $ref: "#/definitions/CreatedRestaurant"
        400:
          description: "Data is invalid"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ErrorResponse"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  
definitions:
  NewDish:
    type: "object"
    required: 
    - "mainDishInfo"
    - "dishType"
    - "dishCalories"
    - "dishCookingTimeMinutes"
    properties:
      mainDishInfo:
        type: object
        properties:
          dishName:
            type: "string"
            minLength: 1
            maxLength: 64
            example: "Lasagna"
          dishPrice:
            type: "integer"
            format: "int64"
            minimum: 1
            example: 250
      dishType:
        type: "string"
        enum:
        - DRINK
        - MAIN
        - SALAD
        - SANDWICH
        - BURGER
        - DESSERT
        - PIZZA
        - SUSHI
        - BAKERY
        example: "MAIN"
      dishCalories:
        type: "integer"
        format: "int64"
        minimum: 1
        example: 175
      dishCookingTimeMinutes:
        type: "integer"
        format: "int64"
        minimum: 1
        example: 30
  CreatedDish :
    type: object
    required:
    - "dishId"
    - "mainDishInfo"
    - "dishType"
    - "dishCalories"
    - "dishCookingTimeMinutes"
    properties:
      dishId:
        type: "integer"
        format: "int64"
        minimum: 1
      mainDishInfo:
        type: object
        properties:
          dishName:
            type: "string"
            minLength: 1
            maxLength: 64
            example: "Lasagna"
          dishPrice:
            type: "integer"
            format: "int64"
            minimum: 1
      dishType:
        type: "string"
        enum:
        - DRINK
        - MAIN
        - SALAD
        - SANDWICH
        - BURGER
        - DESSERT
        - PIZZA
        - SUSHI
        - BAKERY
        example: "ADMIN"
      dishCalories:
        type: "integer"
        format: "int64"
        minimum: 1
      dishCookingTimeMinutes:
        type: "integer"
        format: "int64"
        minimum: 1
        example: 30
  NewOrder:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64" 
        minimum: 1
      createdAt:
        type: "string"
        format: "date-time"
        example: "2020-07-13T10:30:00Z"
      status:
        type: "string"
        minLength: 1
        example: "Заказ готовится"
      userInfo:
        type: "object"
        properties:
          firstName:
            type: "string"
            description: First name of the user
            minLength: 1
            maxLength: 50
          lastName:
            type: "string"
            description: Last name of the user
            minLength: 1
            maxLength: 50
          phone:
            type: "string"
            maxLength: 15
      listOfDishes:
          type: array
          items:
            $ref: "#/definitions/CreatedDish"
      check:
        type: "number"
        format: "double"
        
  CreatedOrder:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64" 
        minimum: 1
      status:
        type: "string"
        minLength: 1
        example: "Заказ готовится"
      userInfo:
        type: "object"
        properties:
          firstName:
            type: "string"
            description: First name of the user
            minLength: 1
            maxLength: 50
          lastName:
            type: "string"
            description: Last name of the user
            minLength: 1
            maxLength: 50
          phone:
            type: "string"
            maxLength: 15
      listOfDishes:
          type: array
          items:
            $ref: "#/definitions/CreatedDish"
      check:
        type: "number"
        format: "double"
        
  NewRestaurant:
    type: "object"
    required: 
    - "restaurantName"
    - "workingHours"
    - "listOfDishes"
    - "restaurantType"
    properties:
      restaurantName:
        type: "string"
        minLength: 1
        maxLength: 255
        example: "Папин сибиряк"
      address:
        type: object
        properties:
          street:
            type: "string"
            minLength: 1
            maxLength: 255
            example: "Плехановская"
          building: 
            type: "string"
            minLength: 1
            maxLength: 10
            example: "6A"
      workingHours:
        type: object
        properties:
          beginingWorkDay:
            type: "string"
            format: "date-time"
            example: "2020-07-13T10:00:00Z"
          endWorkDay:
            type: "string"
            format: "date-time"
            example: "2020-07-13T22:00:00Z"
      listOfDishes:
          type: array
          items:
            $ref: "#/definitions/CreatedDish"
      restaurantType:
        type: "string"
        enum:
        - BAR
        - PIZZERIA
        - BURGER
        - DUMPLINGS
        - SUSHI
        - BAKERY
        - RUSSIAN
        - ITALIAN
        - CHINESE
        - GEORGIAN
        - ARMENIAN
        example: "DUMPLINGS"
  CreatedRestaurant:
    type: object
    required:
    - "dishId"
    - "mainDishInfo"
    - "dishType"
    - "dishCalories"
    - "dishCookingTimeMinutes"
    properties:
      RestaurantId:
        type: "integer"
        format: "int64"
        minimum: 1
      restaurantName:
        type: "string"
        minLength: 1
        maxLength: 255
        example: "Папин сибиряк"
      address:
        type: object
        properties:
          street:
            type: "string"
            minLength: 1
            maxLength: 255
            example: "Плехановская"
          building: 
            type: "string"
            minLength: 1
            maxLength: 10
            example: "6A"
      workingHours:
        type: object
        properties:
          beginingWorkDay:
            type: "string"
            format: "date-time"
            example: "2020-07-13T10:00:00Z"
          endWorkDay:
            type: "string"
            format: "date-time"
            example: "2020-07-13T22:00:00Z"
      listOfDishes:
          type: array
          items:
            $ref: "#/definitions/CreatedDish"
      restaurantType:
        type: "string"
        enum:
        - BAR
        - PIZZERIA
        - BURGER
        - DUMPLINGS
        - SUSHI
        - BAKERY
        - RUSSIAN
        - ITALIAN
        - CHINESE
        - GEORGIAN
        - ARMENIAN
        example: "DUMPLINGS"
  ErrorResponse:
    type: "object"
    properties:
      code:
        type: "string"
      description:
        type: "string"
      payload:
        type: "object"
 